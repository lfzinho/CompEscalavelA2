creates the world
    reads many roads according to file @
    creates many roads @
    loopsd over calling road cycles @
creates a road
    in this road, starts a cycle: @
    cycle:
        randomly creates a car @
car creation:
    instantiates the car @
        rememeber to set counter to the road remotion counter @
    tell the car to start moving
    the car will then cycle via it's own thread/process
car cycle:
    the car will execute the following actions until it's counter hits 0
    car acceleration: @
        sets acceleration to random value
        adds acceleration to speed
        corrects speed above maximum or below minimum
    car movement: @
        decides how to move
            calculates it's desired destination via current speed and position
            if path is clear or wants to crash and hasn't collided yet
                desired destination is position + speed
            if not
                tries to change lane
                if can't change lanes, deaccelerates
        move
            move to desired destination
            if this generates a collision
                tell both cars they have collided
                # a collided car can't change position (not by speed nor changing lanes) and starts counting down to be deleted. That's all
            if wants to change lane now
                tries to change lane (consider risk)
    send movement: @
        creates output with current position of the car
        sends output to broker
    car deletion:
        if the car has already collided:
            diminishes it's counter by 1
            if the counter hits 0:
                removes all references to the car from the highway